// Code generated by entc, DO NOT EDIT.

package issuetag

const (
	// Label holds the string label denoting the issuetag type in the database.
	Label = "issue_tag"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeAssignedIssues holds the string denoting the assignedissues edge name in mutations.
	EdgeAssignedIssues = "assignedIssues"
	// Table holds the table name of the issuetag in the database.
	Table = "issue_tags"
	// AssignedIssuesTable is the table that holds the assignedIssues relation/edge. The primary key declared below.
	AssignedIssuesTable = "issue_assignedTags"
	// AssignedIssuesInverseTable is the table name for the Issue entity.
	// It exists in this package in order to avoid circular dependency with the "issue" package.
	AssignedIssuesInverseTable = "issues"
)

// Columns holds all SQL columns for issuetag fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// AssignedIssuesPrimaryKey and AssignedIssuesColumn2 are the table columns denoting the
	// primary key for the assignedIssues relation (M2M).
	AssignedIssuesPrimaryKey = []string{"issue_id", "issue_tag_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
